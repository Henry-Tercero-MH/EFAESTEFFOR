---
const navItems = [
  { name: 'Inicio', url: '/' },
  { name: 'Sobre Nosotros', url: '/sobre-nosotros' },
  { name: 'Programas', url: '/programas' },
  { name: 'Proyectos', url: '/proyectos' },
  { name: 'Recursos', url: '/recursos' },
  { name: 'Galería', url: '/galeria' },
  { name: 'Noticias', url: '/noticias' },
  { name: 'Contacto', url: '/contacto' }
];

const currentPath = Astro.url.pathname;
---

<header class="sticky top-0 z-50 bg-white shadow-md transition-all duration-300">
  <div class="container mx-auto px-4">
    <div class="flex justify-between items-center py-4">
      <a href="/" class="flex items-center space-x-2">
        <img src="/images/logo.svg" alt="EFA y ESTEFFOR Logo" class="h-12" />
        <div>
          <span class="font-montserrat font-bold text-primary-dark text-xl block leading-tight">EFA y ESTEFFOR</span>
          <span class="font-lora text-secondary-dark text-xs">Educación Agropecuaria y Forestal</span>
        </div>
      </a>

      <!-- Mobile menu button -->
      <button id="menu-toggle" class="md:hidden text-primary-dark focus:outline-none">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex space-x-6">
        {navItems.map(item => (
          <a 
            href={item.url} 
            class={`font-montserrat text-sm font-medium transition-colors duration-300 hover:text-primary relative py-2
            ${currentPath === item.url ? 'text-primary' : 'text-neutral-700'}`}
          >
            {item.name}
            {currentPath === item.url && (
              <span class="absolute bottom-0 left-0 w-full h-0.5 bg-primary"></span>
            )}
          </a>
        ))}
      </nav>
    </div>
  </div>

  <!-- Mobile Navigation -->
  <nav id="mobile-menu" class="hidden md:hidden bg-white">
    <div class="container mx-auto px-4 py-3">
      {navItems.map(item => (
        <a 
          href={item.url} 
          class={`block py-2 px-4 font-montserrat text-base font-medium border-l-4 transition-colors duration-300
          ${currentPath === item.url 
            ? 'border-primary text-primary bg-primary/5' 
            : 'border-transparent text-neutral-700 hover:text-primary hover:bg-primary/5'}`}
        >
          {item.name}
        </a>
      ))}
    </div>
  </nav>
</header>

<script>
  // Mobile menu toggle
  const menuToggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');

  menuToggle?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });

  // Close mobile menu when clicking outside
  document.addEventListener('click', (event) => {
    const isClickInsideMenu = mobileMenu?.contains(event.target as Node);
    const isClickOnToggle = menuToggle?.contains(event.target as Node);
    
    if (!isClickInsideMenu && !isClickOnToggle && !mobileMenu?.classList.contains('hidden')) {
      mobileMenu?.classList.add('hidden');
    }
  });

  // Header scroll effect
  const header = document.querySelector('header');
  let lastScrollY = window.scrollY;

  window.addEventListener('scroll', () => {
    if (window.scrollY > 100) {
      header?.classList.add('py-2');
      header?.classList.add('shadow-lg');
    } else {
      header?.classList.remove('py-2');
      header?.classList.remove('shadow-lg');
    }
    
    lastScrollY = window.scrollY;
  });
</script>